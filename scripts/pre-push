#!/bin/bash

# PivotPHP - Pre-push Hook
# Executa valida√ß√£o completa antes de fazer push para o reposit√≥rio remoto

set -e

echo "üöÄ Executando valida√ß√µes pre-push..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

# Verifica se as depend√™ncias est√£o instaladas
if [ ! -d "vendor" ]; then
    print_error "Depend√™ncias n√£o encontradas. Execute 'composer install' primeiro."
    exit 1
fi

# Verifica se o script validate_all.sh existe
if [ ! -f "scripts/validate_all.sh" ]; then
    print_error "Script validate_all.sh n√£o encontrado!"
    exit 1
fi

print_status "Executando valida√ß√£o completa via validate_all.sh..."

# Executa o script centralizado de valida√ß√£o (modo completo)
if scripts/validate_all.sh; then
    print_success "Todas as valida√ß√µes passaram! üéâ"
    echo ""
    echo "Push autorizado ‚úÖ"
    exit 0
else
    print_error "Uma ou mais valida√ß√µes falharam!"
    echo ""
    print_error "Push rejeitado ‚ùå"
    echo ""
    echo "Corrija os problemas reportados acima e tente novamente."
    echo ""
    echo "üí° Dicas:"
    echo "‚Ä¢ Execute 'scripts/validate_all.sh' para valida√ß√£o detalhada"
    echo "‚Ä¢ Execute 'scripts/validate_project.php' para valida√ß√£o espec√≠fica do projeto"
    echo "‚Ä¢ Execute 'scripts/validate-docs.sh' para valida√ß√£o da documenta√ß√£o"
    echo "‚Ä¢ Execute 'scripts/validate_benchmarks.sh' para valida√ß√£o dos benchmarks"
    echo ""
    echo "Para for√ßar o push (n√£o recomendado), use: git push --no-verify"
    exit 1
fi
